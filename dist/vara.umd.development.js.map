{"version":3,"file":"vara.umd.development.js","sources":["../src/index.ts"],"sourcesContent":["//# sourceMappingURL=./vara.js.map\r\ntype VaraGeneralOptions = {\r\n    fontSize?: number;\r\n    strokeWidth?: number;\r\n    color?: string;\r\n    duration?: number;\r\n    textAlign?: 'left' | 'center' | 'right';\r\n    autoAnimation?: boolean;\r\n    queued?: boolean;\r\n    delay?: number;\r\n    letterSpacing?:\r\n        | {\r\n              [x: string]: number;\r\n          }\r\n        | number;\r\n    breakWord?: boolean;\r\n    width?: number;\r\n};\r\n\r\ntype VaraTextOptions = VaraGeneralOptions & {\r\n    id?: string | number | false;\r\n    x?: number;\r\n    y?: number;\r\n    fromCurrentPosition?: {\r\n        x?: boolean;\r\n        y?: boolean;\r\n    };\r\n};\r\n\r\ntype VaraText = VaraTextOptions & {\r\n    text: string;\r\n};\r\n\r\ntype RenderData = VaraText & {\r\n    render?: {\r\n        text: string;\r\n        x: number;\r\n        y: number;\r\n    }[];\r\n};\r\n\r\ntype VaraFontItem = {\r\n    paths: Array<{\r\n        w: number;\r\n        h: number;\r\n        my: number;\r\n        mx: number;\r\n        dx: number;\r\n        d: string;\r\n    }>;\r\n    w: number;\r\n};\r\n\r\ntype ObjectKeys<T> = T extends object\r\n    ? (keyof T)[]\r\n    : T extends number\r\n    ? []\r\n    : T extends Array<any> | string\r\n    ? string[]\r\n    : never;\r\n\r\nclass Vara {\r\n    elementName: string;\r\n    element: HTMLElement;\r\n    fontSource: string;\r\n    options: VaraGeneralOptions;\r\n    textItems: VaraText[];\r\n    renderData: RenderData[];\r\n    rendered: boolean;\r\n    defaultOptions: Required<VaraGeneralOptions>;\r\n    defaultCharacters: {\r\n        [x: string]: VaraFontItem;\r\n    };\r\n    canvas: HTMLCanvasElement;\r\n    ctx: CanvasRenderingContext2D;\r\n    canvasWidth: number;\r\n    fontCharacters: {\r\n        [x: string]: VaraFontItem;\r\n    };\r\n    fontProperties!: {\r\n        s: number;\r\n        // TODO: add other properties\r\n        slc: 'round';\r\n        bsw: number;\r\n        lh: number;\r\n        space: number;\r\n        tf: number;\r\n    };\r\n    WHITESPACE: number;\r\n    SCALEBASE: number;\r\n\r\n    constructor(\r\n        elem: string,\r\n        fontSource: string,\r\n        text: VaraText[],\r\n        options: VaraGeneralOptions\r\n    ) {\r\n        this.elementName = elem;\r\n        this.element = document.querySelector(elem) as HTMLElement;\r\n        this.fontSource = fontSource;\r\n        this.options = options;\r\n        this.textItems = text;\r\n        this.renderData = text;\r\n        this.rendered = false;\r\n        this.fontCharacters = {};\r\n        this.canvasWidth = 0;\r\n\r\n        this.defaultOptions = {\r\n            fontSize: 21,\r\n            strokeWidth: 0.5,\r\n            color: '#000',\r\n            duration: 1000,\r\n            textAlign: 'left',\r\n            autoAnimation: true,\r\n            queued: true,\r\n            delay: 0,\r\n            breakWord: false,\r\n            letterSpacing: {\r\n                global: 0,\r\n            },\r\n            width: this.element.getBoundingClientRect().width,\r\n        };\r\n\r\n        this.defaultCharacters = {\r\n            '63': {\r\n                paths: [\r\n                    {\r\n                        w: 8.643798828125,\r\n                        h: 14.231731414794922,\r\n                        my: 22.666500004827977,\r\n                        mx: 0,\r\n                        dx: 0,\r\n                        d:\r\n                            'm 0,0 c -2,-6.01,5,-8.64,8,-3.98,2,4.09,-7,8.57,-7,11.85',\r\n                    },\r\n                    {\r\n                        w: 1.103759765625,\r\n                        h: 1.549820899963379,\r\n                        my: 8.881500004827977,\r\n                        dx: 0,\r\n                        mx: 1,\r\n                        d:\r\n                            'm 0,0 a 0.7592,0.7357,0,0,1,0,0.735,0.7592,0.7357,0,0,1,-1,-0.735,0.7592,0.7357,0,0,1,1,-0.738,0.7592,0.7357,0,0,1,0,0.738 z',\r\n                    },\r\n                ],\r\n                w: 8.643798828125,\r\n            },\r\n        };\r\n\r\n        this.canvas = document.createElement('canvas');\r\n        this.canvas.width = 800;\r\n        this.canvas.height = 800;\r\n        this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        this.element.appendChild(this.canvas);\r\n        this.WHITESPACE = 10;\r\n        this.SCALEBASE = 16;\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.normalizeOptions();\r\n\r\n        const xmlhttp = new XMLHttpRequest();\r\n        xmlhttp.open('GET', this.fontSource, true);\r\n        xmlhttp.onreadystatechange = () => {\r\n            if (xmlhttp.readyState == 4) {\r\n                if (xmlhttp.status == 200) {\r\n                    const contents = JSON.parse(xmlhttp.responseText);\r\n                    this.fontCharacters = contents.c;\r\n                    this.fontProperties = contents.p;\r\n                    this.preRender();\r\n                    this.render();\r\n                }\r\n            }\r\n        };\r\n        xmlhttp.send(null);\r\n    }\r\n\r\n    preRender() {\r\n        let svg = this.createSVGNode('svg', {\r\n            width: '100',\r\n            height: '100',\r\n        });\r\n        svg.style.position = 'absolute';\r\n        svg.style.zIndex = '-100';\r\n        svg.style.opacity = '0';\r\n        svg.style.top = '0';\r\n\r\n        document.body.appendChild(svg);\r\n        let svgPathData = this.createSVGNode('path', {\r\n            d: '',\r\n        }) as SVGPathElement;\r\n        svg.appendChild(svgPathData);\r\n        this.objectKeys(this.fontCharacters).forEach(char => {\r\n            this.fontCharacters[char].paths.forEach((path, i) => {\r\n                svgPathData.setAttributeNS(null, 'd', path.d);\r\n                this.fontCharacters[char].paths[\r\n                    i\r\n                ].dx = svgPathData.getBoundingClientRect().x;\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        this.calculatePositions(this.renderData[1]);\r\n        this.draw(this.renderData[1]);\r\n    }\r\n\r\n    draw(_textItem: RenderData) {\r\n        // path - \"d\": \"m 0,0 c 1.677946,-5.44834,5.875964,-14.09066,3.788545,-14.26551,-1.909719,-0.15996,-2.796112,9.62055,-3.788545,14.26551 z\"\r\n        const textItem = <Required<RenderData>>_textItem;\r\n        this.ctx.strokeStyle = textItem.color;\r\n        this.ctx.lineWidth = textItem.strokeWidth;\r\n        this.ctx.fillStyle = 'transparent';\r\n        this.ctx.lineCap = 'round';\r\n        this.ctx.lineJoin = 'round';\r\n        let top = 0;\r\n\r\n        let scale = textItem.fontSize / this.SCALEBASE;\r\n\r\n        textItem.render.forEach(textLine => {\r\n            let left = textLine.x/2;\r\n            \r\n            textLine.text.split('').forEach(letter => {\r\n                let charCode = letter.charCodeAt(0);\r\n                if (letter === ' ') {\r\n                    left += this.WHITESPACE;\r\n                } else if (this.fontCharacters[charCode]) {\r\n                    this.ctx.save();\r\n                    this.ctx.scale(scale, scale);\r\n                    this.fontCharacters[charCode].paths.forEach(path => {\r\n                        let processedPath = this.processPath(path.d, left + path.mx - path.dx, textLine.y + top + 20 - path.my + 1)\r\n                        this.ctx.stroke(new Path2D(processedPath));\r\n                    });\r\n                    left += this.fontCharacters[charCode].w;\r\n                    this.ctx.restore();\r\n                }\r\n            });\r\n            top+= 30;\r\n        })\r\n    }\r\n\r\n    normalizeOptions() {\r\n        this.options = this.options || {};\r\n\r\n        this.objectKeys(this.defaultOptions).forEach(optionKey => {\r\n            if (this.options[optionKey] === undefined) {\r\n                // @ts-ignore\r\n                this.options[optionKey] = this.defaultOptions[optionKey];\r\n            }\r\n        });\r\n\r\n        this.renderData.forEach((textItem, i) => {\r\n            if (typeof textItem === 'string') {\r\n                this.renderData[i] = {\r\n                    text: textItem,\r\n                    ...this.defaultOptions,\r\n                };\r\n            } else if (typeof textItem === 'object') {\r\n                this.objectKeys(this.options).forEach(option => {\r\n                    if (textItem[option] === undefined)\r\n                        // @ts-ignore\r\n                        textItem[option] = this.options[option];\r\n                });\r\n            }\r\n        });\r\n\r\n        Object.keys(this.defaultCharacters).forEach(character => {\r\n            if (this.fontCharacters[character] === undefined) {\r\n                this.fontCharacters[character] = this.defaultCharacters[\r\n                    character\r\n                ];\r\n            }\r\n        });\r\n    }\r\n\r\n    calculatePositions(_textItem: RenderData) {\r\n        const textItem = <Required<RenderData>>_textItem;\r\n        let scale = textItem.fontSize / this.SCALEBASE;\r\n        // TODO: Create non breaking text\r\n        if (!textItem.breakWord) {\r\n            const textBlock =\r\n                typeof textItem.text === 'string'\r\n                    ? [textItem.text]\r\n                    : textItem.text;\r\n\r\n            const breakedTextBlock = textBlock.map(line => {\r\n                return line.split(' ');\r\n            });\r\n\r\n            const lines: {\r\n                text: string;\r\n                width: number;\r\n            }[] = [{\r\n                text: \"\",\r\n                width: 0\r\n            }];\r\n            breakedTextBlock.forEach(line => {\r\n                let spaceWidth = 0;\r\n                line.forEach(word => {\r\n                    let wordWidth = 0;\r\n\r\n                    word.split('').forEach(letter => {\r\n                        const charCode = letter.charCodeAt(0);\r\n\r\n                        const currentLetter =\r\n                            this.fontCharacters[charCode] ||\r\n                            this.fontCharacters['63'];\r\n                        let pathPositionCorrection = currentLetter.paths.reduce((a,c) => a+c.mx-c.dx, 0)\r\n                        wordWidth += (currentLetter.w + pathPositionCorrection) * scale;\r\n                    });\r\n\r\n                    if (lines[lines.length-1].width + wordWidth + spaceWidth + textItem.x*scale > textItem.width) {\r\n                        lines.push({\r\n                            text: word,\r\n                            width: wordWidth\r\n                        });\r\n                        spaceWidth = 0;\r\n                    } else {\r\n                        lines[lines.length - 1] = {\r\n                            text: lines[lines.length-1].text+word,\r\n                            width: lines[lines.length-1].width+wordWidth\r\n                        };\r\n                        spaceWidth+= this.WHITESPACE * scale;\r\n                        lines[lines.length - 1].text += ' ';\r\n                    }\r\n                });\r\n            });\r\n\r\n            lines.forEach(line => {\r\n                console.log(line.text, line.width)\r\n                let x = textItem.x;\r\n                if(textItem.textAlign === \"center\") {\r\n                    console.log(line.width, (textItem.width - line.width)/2);\r\n                    x = (textItem.width - line.width)/2;\r\n                }\r\n                if (textItem.render) {\r\n                    textItem.render.push({\r\n                        text: line.text,\r\n                        x: x,\r\n                        y: textItem.y,\r\n                    });\r\n                } else {\r\n                    textItem.render = [\r\n                        {\r\n                            text: line.text,\r\n                            x: x,\r\n                            y: textItem.y,\r\n                        },\r\n                    ];\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    createSVGNode(n: string, v: { [x: string]: string }) {\r\n        const e = document.createElementNS('http://www.w3.org/2000/svg', n);\r\n        for (var p in v)\r\n            e.setAttributeNS(\r\n                null,\r\n                p.replace(/[A-Z]/g, function(m) {\r\n                    return '-' + m.toLowerCase();\r\n                }),\r\n                v[p]\r\n            );\r\n        return e;\r\n    }\r\n\r\n    processPath(path:string, x=0, y=0) {\r\n        let svgPath = path.split('');\r\n        svgPath[2] = x + 1 + '';\r\n        svgPath[4] = y + '';\r\n        return svgPath.join('');\r\n    }\r\n\r\n    objectKeys<T>(x: T) {\r\n        let keys = Object.keys(x) as ObjectKeys<T>;\r\n        return keys;\r\n    }\r\n}\r\n\r\nclass Group {\r\n    items: any[];\r\n    x: number;\r\n    y: number;\r\n\r\n    constructor() {\r\n        this.items = [];\r\n        this.x = 0;\r\n        this.y = 0;\r\n    }\r\n}\r\n\r\nif (window) {\r\n    (<any>window).Vara = Vara;\r\n}\r\n"],"names":["Vara","elem","fontSource","text","options","elementName","element","document","querySelector","textItems","renderData","rendered","fontCharacters","canvasWidth","defaultOptions","fontSize","strokeWidth","color","duration","textAlign","autoAnimation","queued","delay","breakWord","letterSpacing","global","width","getBoundingClientRect","defaultCharacters","paths","w","h","my","mx","dx","d","canvas","createElement","height","ctx","getContext","appendChild","WHITESPACE","SCALEBASE","init","normalizeOptions","xmlhttp","XMLHttpRequest","open","onreadystatechange","readyState","status","contents","JSON","parse","responseText","c","fontProperties","p","preRender","render","send","svg","createSVGNode","style","position","zIndex","opacity","top","body","svgPathData","objectKeys","forEach","char","path","i","setAttributeNS","x","calculatePositions","draw","_textItem","textItem","strokeStyle","lineWidth","fillStyle","lineCap","lineJoin","scale","textLine","left","split","letter","charCode","charCodeAt","save","processedPath","processPath","y","stroke","Path2D","restore","optionKey","undefined","option","Object","keys","character","textBlock","breakedTextBlock","map","line","lines","spaceWidth","word","wordWidth","currentLetter","pathPositionCorrection","reduce","a","length","push","console","log","n","v","e","createElementNS","replace","m","toLowerCase","svgPath","join","window"],"mappings":"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"}