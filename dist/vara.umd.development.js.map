{"version":3,"file":"vara.umd.development.js","sources":["../src/index.ts"],"sourcesContent":["type VaraGeneralOptions = {\r\n    fontSize?: number;\r\n    strokeWidth?: number;\r\n    color?: string;\r\n    duration?: number;\r\n    textAlign?: 'left' | 'center' | 'right';\r\n    autoAnimation?: boolean;\r\n    queued?: boolean;\r\n    delay?: number;\r\n    letterSpacing?:\r\n        | {\r\n              [x: string]: number;\r\n          }\r\n        | number;\r\n    breakWord?: boolean;\r\n    width?: number;\r\n    lineHeight?: number;\r\n};\r\n\r\ntype VaraTextOptions = VaraGeneralOptions & {\r\n    id?: string | number | false;\r\n    x?: number;\r\n    y?: number;\r\n    absolutePosition?: boolean;\r\n};\r\n\r\ntype VaraText = VaraTextOptions & {\r\n    text: string;\r\n};\r\n\r\ntype RenderData = VaraText & {\r\n    render?: {\r\n        path: string;\r\n        x: number;\r\n        y: number;\r\n        pathLength: number;\r\n        dashOffset: number;\r\n    }[];\r\n    currentlyDrawing?: number;\r\n    startTime?: number | false;\r\n    height?: number;\r\n};\r\n\r\ntype VaraFontItem = {\r\n    paths: Array<{\r\n        w: number;\r\n        h: number;\r\n        my: number;\r\n        mx: number;\r\n        dx: number;\r\n        d: string;\r\n        pl: number;\r\n    }>;\r\n    w: number;\r\n};\r\n\r\ntype ObjectKeys<T> = T extends object\r\n    ? (keyof T)[]\r\n    : T extends number\r\n    ? []\r\n    : T extends Array<any> | string\r\n    ? string[]\r\n    : never;\r\n\r\nclass Vara {\r\n    elementName: string;\r\n    element: HTMLElement;\r\n    fontSource: string;\r\n    options: VaraGeneralOptions;\r\n    textItems: VaraText[];\r\n    renderData: RenderData[];\r\n    rendered: boolean;\r\n    defaultOptions: Required<VaraGeneralOptions>;\r\n    defaultCharacters: {\r\n        [x: string]: VaraFontItem;\r\n    };\r\n    canvas: HTMLCanvasElement;\r\n    ctx: CanvasRenderingContext2D;\r\n    canvasWidth: number;\r\n    contextHeight: number;\r\n    fontCharacters: {\r\n        [x: string]: VaraFontItem;\r\n    };\r\n    fontProperties!: {\r\n        s: number;\r\n        // TODO: add other properties\r\n        slc: 'round';\r\n        bsw: number;\r\n        lh: number;\r\n        space: number;\r\n        tf: number;\r\n    };\r\n    WHITESPACE: number;\r\n    SCALEBASE: number;\r\n\r\n    constructor(\r\n        elem: string,\r\n        fontSource: string,\r\n        text: VaraText[],\r\n        options: VaraGeneralOptions\r\n    ) {\r\n        this.elementName = elem;\r\n        this.element = document.querySelector(elem) as HTMLElement;\r\n        this.fontSource = fontSource;\r\n        this.options = options;\r\n        this.textItems = text;\r\n        this.renderData = text;\r\n        this.rendered = false;\r\n        this.fontCharacters = {};\r\n        this.canvasWidth = 0;\r\n\r\n        this.defaultOptions = {\r\n            fontSize: 21,\r\n            strokeWidth: 0.5,\r\n            color: '#000',\r\n            duration: 1000,\r\n            textAlign: 'left',\r\n            autoAnimation: true,\r\n            queued: true,\r\n            delay: 0,\r\n            breakWord: false,\r\n            letterSpacing: {\r\n                global: 0,\r\n            },\r\n            width: this.element.getBoundingClientRect().width,\r\n            lineHeight: 30,\r\n        };\r\n\r\n        this.defaultCharacters = {\r\n            '63': {\r\n                paths: [\r\n                    {\r\n                        w: 8.643798828125,\r\n                        h: 14.231731414794922,\r\n                        my: 22.666500004827977,\r\n                        mx: 0,\r\n                        dx: 0,\r\n                        d:\r\n                            'm 0,0 c -2,-6.01,5,-8.64,8,-3.98,2,4.09,-7,8.57,-7,11.85',\r\n                        pl: 1,\r\n                    },\r\n                    {\r\n                        w: 1.103759765625,\r\n                        h: 1.549820899963379,\r\n                        my: 8.881500004827977,\r\n                        dx: 0,\r\n                        mx: 1,\r\n                        d:\r\n                            'm 0,0 a 0.7592,0.7357,0,0,1,0,0.735,0.7592,0.7357,0,0,1,-1,-0.735,0.7592,0.7357,0,0,1,1,-0.738,0.7592,0.7357,0,0,1,0,0.738 z',\r\n                        pl: 1,\r\n                    },\r\n                ],\r\n                w: 8.643798828125,\r\n            },\r\n        };\r\n\r\n        this.canvas = document.createElement('canvas');\r\n        this.canvas.width = 800;\r\n        this.canvas.height = 800;\r\n        this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        this.element.appendChild(this.canvas);\r\n        this.WHITESPACE = 10;\r\n        this.SCALEBASE = 16;\r\n\r\n        this.contextHeight = 0;\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.normalizeOptions();\r\n\r\n        const xmlhttp = new XMLHttpRequest();\r\n        xmlhttp.open('GET', this.fontSource, true);\r\n        xmlhttp.onreadystatechange = () => {\r\n            if (xmlhttp.readyState == 4) {\r\n                if (xmlhttp.status == 200) {\r\n                    const contents = JSON.parse(xmlhttp.responseText);\r\n                    this.fontCharacters = contents.c;\r\n                    this.fontProperties = contents.p;\r\n                    this.preRender();\r\n                    this.render();\r\n                    //window.requestAnimationFrame()\r\n                }\r\n            }\r\n        };\r\n        xmlhttp.send(null);\r\n    }\r\n\r\n    /**\r\n     * Sets default option value for all existing option properties.\r\n     * If an option value is not provided, then it will first check if it is given in the global options, if not it will use the default option.\r\n     */\r\n\r\n    normalizeOptions() {\r\n        this.options = this.options || {};\r\n\r\n        this.objectKeys(this.defaultOptions).forEach(optionKey => {\r\n            if (this.options[optionKey] === undefined) {\r\n                // @ts-ignore\r\n                this.options[optionKey] = this.defaultOptions[optionKey];\r\n            }\r\n        });\r\n\r\n        this.renderData.forEach((textItem, i) => {\r\n            if (typeof textItem === 'string') {\r\n                this.renderData[i] = {\r\n                    text: textItem,\r\n                    ...this.defaultOptions,\r\n                };\r\n            } else if (typeof textItem === 'object') {\r\n                this.objectKeys(this.options).forEach(option => {\r\n                    if (textItem[option] === undefined)\r\n                        // @ts-ignore\r\n                        textItem[option] = this.options[option];\r\n                });\r\n            }\r\n        });\r\n\r\n        Object.keys(this.defaultCharacters).forEach(character => {\r\n            if (this.fontCharacters[character] === undefined) {\r\n                this.fontCharacters[character] = this.defaultCharacters[\r\n                    character\r\n                ];\r\n            }\r\n        });\r\n    }\r\n\r\n    preRender() {\r\n        let svg = this.createSVGNode('svg', {\r\n            width: '100',\r\n            height: '100',\r\n        });\r\n        svg.style.position = 'absolute';\r\n        svg.style.zIndex = '-100';\r\n        svg.style.opacity = '0';\r\n        svg.style.top = '0';\r\n\r\n        document.body.appendChild(svg);\r\n        let svgPathData = this.createSVGNode('path', {\r\n            d: '',\r\n        }) as SVGPathElement;\r\n        svg.appendChild(svgPathData);\r\n        this.objectKeys(this.fontCharacters).forEach(char => {\r\n            this.fontCharacters[char].paths.forEach((path, i) => {\r\n                svgPathData.setAttributeNS(null, 'd', path.d);\r\n                this.fontCharacters[char].paths[\r\n                    i\r\n                ].dx = svgPathData.getBoundingClientRect().x;\r\n                this.fontCharacters[char].paths[\r\n                    i\r\n                ].pl = svgPathData.getTotalLength();\r\n            });\r\n        });\r\n\r\n        this.renderData.forEach(item => {\r\n            item.currentlyDrawing = 0;\r\n            item.startTime = false;\r\n        });\r\n\r\n        this.generateRenderData(this.renderData[0]);\r\n    }\r\n\r\n    render(rafTime = 0) {\r\n        let canvasHeight = this.calculateCanvasHeight();\r\n        if (canvasHeight !== this.canvas.height) {\r\n            this.canvas.height = canvasHeight;\r\n        }\r\n        this.ctx.clearRect(0, 0, 800, canvasHeight);\r\n        this.draw(this.renderData[0], rafTime);\r\n        window.requestAnimationFrame(time => this.render(time));\r\n    }\r\n\r\n    draw(_textItem: RenderData, rafTime: number) {\r\n        const textItem = <Required<RenderData>>_textItem;\r\n        this.ctx.strokeStyle = textItem.color;\r\n        this.ctx.lineWidth = textItem.strokeWidth;\r\n        this.ctx.fillStyle = 'transparent';\r\n        this.ctx.lineCap = 'round';\r\n        this.ctx.lineJoin = 'round';\r\n\r\n        let scale = textItem.fontSize / this.SCALEBASE;\r\n\r\n        const totalPathLength = textItem.render.reduce(\r\n            (a, c) => a + c.pathLength,\r\n            0\r\n        );\r\n\r\n        if (!textItem.startTime) {\r\n            textItem.startTime = rafTime;\r\n        }\r\n\r\n        textItem.render.forEach((item, itemIndex) => {\r\n            const pathDuration =\r\n                ((item.pathLength / totalPathLength) * textItem.duration) /\r\n                1000;\r\n            const delta = (rafTime - (textItem.startTime as number)) / 1000;\r\n\r\n            const speed = item.pathLength / pathDuration;\r\n\r\n            this.ctx.save();\r\n            this.ctx.scale(scale, scale);\r\n\r\n            this.ctx.lineDashOffset = 1;\r\n            this.ctx.setLineDash([item.dashOffset, item.pathLength + 1]);\r\n            if (textItem.currentlyDrawing === itemIndex) {\r\n                if (item.dashOffset >= item.pathLength) {\r\n                    textItem.currentlyDrawing += 1;\r\n                }\r\n                item.dashOffset += speed * delta;\r\n            }\r\n\r\n            this.ctx.stroke(\r\n                new Path2D(this.processPath(item.path, item.x, item.y))\r\n            );\r\n            this.ctx.restore();\r\n        });\r\n\r\n        textItem.startTime = rafTime;\r\n    }\r\n\r\n    /**\r\n     * Calculates the position of each item on the canvas and returns the data required to render it.\r\n     * @param {RenderData} _textItem A single text block that needs to be rendered.\r\n     */\r\n    generateRenderData(_textItem: RenderData) {\r\n        const textItem = <Required<RenderData>>_textItem;\r\n        let scale = textItem.fontSize / this.SCALEBASE;\r\n        textItem.height = 0;\r\n        // TODO: Create non breaking text\r\n        if (!textItem.breakWord) {\r\n            const textBlock =\r\n                typeof textItem.text === 'string'\r\n                    ? [textItem.text]\r\n                    : textItem.text;\r\n\r\n            const breakedTextBlock = textBlock.map(line => {\r\n                return line.split(' ');\r\n            });\r\n\r\n            const lines: {\r\n                text: string;\r\n                width: number;\r\n            }[] = [\r\n                {\r\n                    text: '',\r\n                    width: 0,\r\n                },\r\n            ];\r\n\r\n            breakedTextBlock.forEach(line => {\r\n                let spaceWidth = 0;\r\n                line.forEach(word => {\r\n                    let wordWidth = 0;\r\n\r\n                    word.split('').forEach(letter => {\r\n                        const charCode = letter.charCodeAt(0);\r\n\r\n                        const currentLetter =\r\n                            this.fontCharacters[charCode] ||\r\n                            this.fontCharacters['63'];\r\n                        let pathPositionCorrection = currentLetter.paths.reduce(\r\n                            (a, c) => a + c.mx - c.dx,\r\n                            0\r\n                        );\r\n                        wordWidth +=\r\n                            (currentLetter.w + pathPositionCorrection) * scale;\r\n                    });\r\n\r\n                    if (\r\n                        lines[lines.length - 1].width +\r\n                            wordWidth +\r\n                            5 * scale +\r\n                            spaceWidth +\r\n                            textItem.x * scale >\r\n                        textItem.width\r\n                    ) {\r\n                        lines.push({\r\n                            text: word + ' ',\r\n                            width: wordWidth,\r\n                        });\r\n                        spaceWidth = 0;\r\n                    } else {\r\n                        lines[lines.length - 1] = {\r\n                            text: lines[lines.length - 1].text + word,\r\n                            width: lines[lines.length - 1].width + wordWidth,\r\n                        };\r\n                        spaceWidth += this.WHITESPACE * scale;\r\n                        lines[lines.length - 1].text += ' ';\r\n                    }\r\n                });\r\n            });\r\n\r\n            let posX = textItem.x / scale,\r\n                posY = this.getTopPosition(0) / scale + textItem.y / scale,\r\n                top = textItem.lineHeight;\r\n\r\n            if (!textItem.render) {\r\n                textItem.render = [];\r\n            }\r\n            lines.forEach(line => {\r\n                let left = 0;\r\n                let x = posX,\r\n                    y = posY;\r\n                if (textItem.textAlign === 'center') {\r\n                    x = (textItem.width - line.width) / 2 / scale;\r\n                }\r\n                line.text.split('').forEach(letter => {\r\n                    if (letter === ' ') {\r\n                        left += this.WHITESPACE;\r\n                    } else {\r\n                        const currentLetter =\r\n                            this.fontCharacters[letter.charCodeAt(0)] ||\r\n                            this.fontCharacters['63'];\r\n\r\n                        currentLetter.paths.forEach(path => {\r\n                            textItem.render.push({\r\n                                path: path.d,\r\n                                x: x + left + path.mx - path.dx,\r\n                                y: y + top - path.my,\r\n                                pathLength: path.pl,\r\n                                dashOffset: 0,\r\n                            });\r\n                        });\r\n\r\n                        left += currentLetter.w;\r\n                    }\r\n                });\r\n                top += textItem.lineHeight;\r\n                if (!textItem.absolutePosition) {\r\n                    console.log(textItem.height, textItem.lineHeight);\r\n                    textItem.height += textItem.lineHeight * scale;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    calculateCanvasHeight() {\r\n        let height = 0;\r\n        this.renderData.forEach(item => {\r\n            if (item.height && item.y) {\r\n                height += item.height + item.y;\r\n            }\r\n        });\r\n        return height + 50;\r\n    }\r\n\r\n    getTopPosition(i: number) {\r\n        if (i === 0) return 0;\r\n        else return 1;\r\n    }\r\n\r\n    alterText(\r\n        id: number,\r\n        text: string,\r\n        letterAnimate: (text: string) => number[]\r\n    ) {\r\n        this.renderData[id].currentlyDrawing = 0;\r\n        this.renderData[id].render = [];\r\n        this.renderData[id].text = text;\r\n\r\n        let shouldAnimate = letterAnimate(text);\r\n        this.generateRenderData(this.renderData[id]);\r\n\r\n        this.renderData[id].render?.forEach((item, i) => {\r\n            if (!shouldAnimate.includes(i)) {\r\n                item.dashOffset = item.pathLength;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Creates and returns an SVG element\r\n     * @param n The name of the SVG node to be created\r\n     * @param v The attributes of the node\r\n     */\r\n\r\n    createSVGNode(n: string, v: { [x: string]: string }) {\r\n        const e = document.createElementNS('http://www.w3.org/2000/svg', n);\r\n        for (var p in v)\r\n            e.setAttributeNS(\r\n                null,\r\n                p.replace(/[A-Z]/g, function(m) {\r\n                    return '-' + m.toLowerCase();\r\n                }),\r\n                v[p]\r\n            );\r\n        return e;\r\n    }\r\n\r\n    /**\r\n     * Modifies the move to command of a given path and returns it.\r\n     * @param path The path \"d\" property\r\n     * @param x The x co-ordinate\r\n     * @param y The y co-ordinate\r\n     */\r\n    processPath(path: string, x = 0, y = 0) {\r\n        let svgPath = path.split('');\r\n        svgPath[2] = x + 1 + '';\r\n        svgPath[4] = y + '';\r\n        return svgPath.join('');\r\n    }\r\n\r\n    objectKeys<T>(x: T) {\r\n        let keys = Object.keys(x) as ObjectKeys<T>;\r\n        return keys;\r\n    }\r\n\r\n    boundRect(x: number, y: number, w: number, h = 10) {\r\n        this.ctx.save();\r\n        this.ctx.fillStyle = 'rgba(209, 56, 61,0.4)';\r\n        this.ctx.fillRect(x, y, w, h);\r\n        this.ctx.fill();\r\n        this.ctx.restore();\r\n    }\r\n}\r\n\r\nclass Group {\r\n    items: any[];\r\n    x: number;\r\n    y: number;\r\n\r\n    constructor() {\r\n        this.items = [];\r\n        this.x = 0;\r\n        this.y = 0;\r\n    }\r\n}\r\n\r\nif (window) {\r\n    (<any>window).Vara = Vara;\r\n}\r\n"],"names":["Vara","elem","fontSource","text","options","elementName","element","document","querySelector","textItems","renderData","rendered","fontCharacters","canvasWidth","defaultOptions","fontSize","strokeWidth","color","duration","textAlign","autoAnimation","queued","delay","breakWord","letterSpacing","global","width","getBoundingClientRect","lineHeight","defaultCharacters","paths","w","h","my","mx","dx","d","pl","canvas","createElement","height","ctx","getContext","appendChild","WHITESPACE","SCALEBASE","contextHeight","init","normalizeOptions","xmlhttp","XMLHttpRequest","open","onreadystatechange","readyState","status","contents","JSON","parse","responseText","c","fontProperties","p","preRender","render","send","objectKeys","forEach","optionKey","undefined","textItem","i","option","Object","keys","character","svg","createSVGNode","style","position","zIndex","opacity","top","body","svgPathData","char","path","setAttributeNS","x","getTotalLength","item","currentlyDrawing","startTime","generateRenderData","rafTime","canvasHeight","calculateCanvasHeight","clearRect","draw","window","requestAnimationFrame","time","_textItem","strokeStyle","lineWidth","fillStyle","lineCap","lineJoin","scale","totalPathLength","reduce","a","pathLength","itemIndex","pathDuration","delta","speed","save","lineDashOffset","setLineDash","dashOffset","stroke","Path2D","processPath","y","restore","textBlock","breakedTextBlock","map","line","split","lines","spaceWidth","word","wordWidth","letter","charCode","charCodeAt","currentLetter","pathPositionCorrection","length","push","posX","posY","getTopPosition","left","absolutePosition","console","log","alterText","id","letterAnimate","shouldAnimate","includes","n","v","e","createElementNS","replace","m","toLowerCase","svgPath","join","boundRect","fillRect","fill"],"mappings":"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"}