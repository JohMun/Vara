{"version":3,"file":"vara.umd.development.js","sources":["../src/index.ts"],"sourcesContent":["//# sourceMappingURL=./vara.js.map\r\ntype VaraGeneralOptions = {\r\n    fontSize?: number;\r\n    strokeWidth?: number;\r\n    color?: string;\r\n    duration?: number;\r\n    textAlign?: 'left' | 'center' | 'right';\r\n    autoAnimation?: boolean;\r\n    queued?: boolean;\r\n    delay?: number;\r\n    letterSpacing?:\r\n        | {\r\n              [x: string]: number;\r\n          }\r\n        | number;\r\n    breakWord?: boolean;\r\n    width?: number;\r\n};\r\n\r\ntype VaraTextOptions = VaraGeneralOptions & {\r\n    id?: string | number | false;\r\n    x?: number;\r\n    y?: number;\r\n    fromCurrentPosition?: {\r\n        x?: boolean;\r\n        y?: boolean;\r\n    };\r\n};\r\n\r\ntype VaraText = VaraTextOptions & {\r\n    text: string;\r\n};\r\n\r\ntype RenderData = VaraText & {\r\n    render?: {\r\n        path: string;\r\n        x: number;\r\n        y: number;\r\n        pathLength: number;\r\n        dashOffset: number;\r\n    }[];\r\n    currentlyDrawing?: number;\r\n    startTime?: number | false;\r\n};\r\n\r\ntype VaraFontItem = {\r\n    paths: Array<{\r\n        w: number;\r\n        h: number;\r\n        my: number;\r\n        mx: number;\r\n        dx: number;\r\n        d: string;\r\n        pl: number;\r\n    }>;\r\n    w: number;\r\n};\r\n\r\ntype ObjectKeys<T> = T extends object\r\n    ? (keyof T)[]\r\n    : T extends number\r\n    ? []\r\n    : T extends Array<any> | string\r\n    ? string[]\r\n    : never;\r\n\r\nclass Vara {\r\n    elementName: string;\r\n    element: HTMLElement;\r\n    fontSource: string;\r\n    options: VaraGeneralOptions;\r\n    textItems: VaraText[];\r\n    renderData: RenderData[];\r\n    rendered: boolean;\r\n    defaultOptions: Required<VaraGeneralOptions>;\r\n    defaultCharacters: {\r\n        [x: string]: VaraFontItem;\r\n    };\r\n    canvas: HTMLCanvasElement;\r\n    ctx: CanvasRenderingContext2D;\r\n    canvasWidth: number;\r\n    fontCharacters: {\r\n        [x: string]: VaraFontItem;\r\n    };\r\n    fontProperties!: {\r\n        s: number;\r\n        // TODO: add other properties\r\n        slc: 'round';\r\n        bsw: number;\r\n        lh: number;\r\n        space: number;\r\n        tf: number;\r\n    };\r\n    WHITESPACE: number;\r\n    SCALEBASE: number;\r\n\r\n    constructor(\r\n        elem: string,\r\n        fontSource: string,\r\n        text: VaraText[],\r\n        options: VaraGeneralOptions\r\n    ) {\r\n        this.elementName = elem;\r\n        this.element = document.querySelector(elem) as HTMLElement;\r\n        this.fontSource = fontSource;\r\n        this.options = options;\r\n        this.textItems = text;\r\n        this.renderData = text;\r\n        this.rendered = false;\r\n        this.fontCharacters = {};\r\n        this.canvasWidth = 0;\r\n\r\n        this.defaultOptions = {\r\n            fontSize: 21,\r\n            strokeWidth: 0.5,\r\n            color: '#000',\r\n            duration: 1000,\r\n            textAlign: 'left',\r\n            autoAnimation: true,\r\n            queued: true,\r\n            delay: 0,\r\n            breakWord: false,\r\n            letterSpacing: {\r\n                global: 0,\r\n            },\r\n            width: this.element.getBoundingClientRect().width,\r\n        };\r\n\r\n        this.defaultCharacters = {\r\n            '63': {\r\n                paths: [\r\n                    {\r\n                        w: 8.643798828125,\r\n                        h: 14.231731414794922,\r\n                        my: 22.666500004827977,\r\n                        mx: 0,\r\n                        dx: 0,\r\n                        d:\r\n                            'm 0,0 c -2,-6.01,5,-8.64,8,-3.98,2,4.09,-7,8.57,-7,11.85',\r\n                        pl: 1,\r\n                    },\r\n                    {\r\n                        w: 1.103759765625,\r\n                        h: 1.549820899963379,\r\n                        my: 8.881500004827977,\r\n                        dx: 0,\r\n                        mx: 1,\r\n                        d:\r\n                            'm 0,0 a 0.7592,0.7357,0,0,1,0,0.735,0.7592,0.7357,0,0,1,-1,-0.735,0.7592,0.7357,0,0,1,1,-0.738,0.7592,0.7357,0,0,1,0,0.738 z',\r\n                        pl: 1,\r\n                    },\r\n                ],\r\n                w: 8.643798828125,\r\n            },\r\n        };\r\n\r\n        this.canvas = document.createElement('canvas');\r\n        this.canvas.width = 800;\r\n        this.canvas.height = 800;\r\n        this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        this.element.appendChild(this.canvas);\r\n        this.WHITESPACE = 10;\r\n        this.SCALEBASE = 16;\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.normalizeOptions();\r\n\r\n        const xmlhttp = new XMLHttpRequest();\r\n        xmlhttp.open('GET', this.fontSource, true);\r\n        xmlhttp.onreadystatechange = () => {\r\n            if (xmlhttp.readyState == 4) {\r\n                if (xmlhttp.status == 200) {\r\n                    const contents = JSON.parse(xmlhttp.responseText);\r\n                    this.fontCharacters = contents.c;\r\n                    this.fontProperties = contents.p;\r\n                    this.preRender();\r\n                    this.render();\r\n                    //window.requestAnimationFrame()\r\n                }\r\n            }\r\n        };\r\n        xmlhttp.send(null);\r\n    }\r\n\r\n    preRender() {\r\n        let svg = this.createSVGNode('svg', {\r\n            width: '100',\r\n            height: '100',\r\n        });\r\n        svg.style.position = 'absolute';\r\n        svg.style.zIndex = '-100';\r\n        svg.style.opacity = '0';\r\n        svg.style.top = '0';\r\n\r\n        document.body.appendChild(svg);\r\n        let svgPathData = this.createSVGNode('path', {\r\n            d: '',\r\n        }) as SVGPathElement;\r\n        svg.appendChild(svgPathData);\r\n        this.objectKeys(this.fontCharacters).forEach(char => {\r\n            this.fontCharacters[char].paths.forEach((path, i) => {\r\n                svgPathData.setAttributeNS(null, 'd', path.d);\r\n                this.fontCharacters[char].paths[\r\n                    i\r\n                ].dx = svgPathData.getBoundingClientRect().x;\r\n                this.fontCharacters[char].paths[\r\n                    i\r\n                ].pl = svgPathData.getTotalLength();\r\n            });\r\n        });\r\n\r\n        this.renderData.forEach(item => {\r\n            item.currentlyDrawing = 0;\r\n            item.startTime = false;\r\n        })\r\n\r\n        this.generateRenderData(this.renderData[1]);\r\n    }\r\n\r\n    render(rafTime=0) {\r\n        this.ctx.clearRect(0, 0, 800, 800);\r\n        this.draw(this.renderData[1], rafTime);\r\n        window.requestAnimationFrame((time) => this.render(time));\r\n    }\r\n\r\n    draw(_textItem: RenderData, rafTime: number) {\r\n        const textItem = <Required<RenderData>>_textItem;\r\n        this.ctx.strokeStyle = textItem.color;\r\n        this.ctx.lineWidth = textItem.strokeWidth;\r\n        this.ctx.fillStyle = 'transparent';\r\n        this.ctx.lineCap = 'round';\r\n        this.ctx.lineJoin = 'round';\r\n\r\n        let scale = textItem.fontSize / this.SCALEBASE;\r\n\r\n        const totalPathLength = textItem.render.reduce((a,c) => a+c.pathLength, 0);\r\n\r\n        if(!textItem.startTime) {\r\n            textItem.startTime = rafTime;\r\n        }\r\n\r\n        textItem.render.forEach((item, itemIndex) => {\r\n            \r\n            const pathDuration = ((item.pathLength / totalPathLength) * textItem.duration)/1000;\r\n            const delta = (rafTime - (textItem.startTime as number)) / 1000;\r\n\r\n            const speed = item.pathLength / pathDuration;\r\n\r\n            this.ctx.save();\r\n            this.ctx.scale(scale, scale);\r\n\r\n            this.ctx.setLineDash([item.dashOffset, item.pathLength]);\r\n            if(textItem.currentlyDrawing === itemIndex) {\r\n                console.log(textItem.currentlyDrawing, speed, delta);\r\n                if(item.dashOffset >= item.pathLength) {\r\n                    textItem.currentlyDrawing+= 1;\r\n                }\r\n                item.dashOffset+= speed * delta;\r\n            }\r\n            \r\n            this.ctx.stroke(\r\n                new Path2D(this.processPath(item.path, item.x, item.y))\r\n            );\r\n            this.ctx.restore();\r\n        });\r\n\r\n        textItem.startTime = rafTime;\r\n        \r\n    }\r\n\r\n    /**\r\n     * Sets default option value for all existing option properties.\r\n     * If an option value is not provided, then it will first check if it is given in the global options, if not it will use the default option.\r\n     */\r\n\r\n    normalizeOptions() {\r\n        this.options = this.options || {};\r\n\r\n        this.objectKeys(this.defaultOptions).forEach(optionKey => {\r\n            if (this.options[optionKey] === undefined) {\r\n                // @ts-ignore\r\n                this.options[optionKey] = this.defaultOptions[optionKey];\r\n            }\r\n        });\r\n\r\n        this.renderData.forEach((textItem, i) => {\r\n            if (typeof textItem === 'string') {\r\n                this.renderData[i] = {\r\n                    text: textItem,\r\n                    ...this.defaultOptions,\r\n                };\r\n            } else if (typeof textItem === 'object') {\r\n                this.objectKeys(this.options).forEach(option => {\r\n                    if (textItem[option] === undefined)\r\n                        // @ts-ignore\r\n                        textItem[option] = this.options[option];\r\n                });\r\n            }\r\n        });\r\n\r\n        Object.keys(this.defaultCharacters).forEach(character => {\r\n            if (this.fontCharacters[character] === undefined) {\r\n                this.fontCharacters[character] = this.defaultCharacters[\r\n                    character\r\n                ];\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculates the position of each item on the canvas and returns the data required to render it.\r\n     * @param {RenderData} _textItem A single text block that needs to be rendered.\r\n     */\r\n    generateRenderData(_textItem: RenderData) {\r\n        const textItem = <Required<RenderData>>_textItem;\r\n        let scale = textItem.fontSize / this.SCALEBASE;\r\n        // TODO: Create non breaking text\r\n        if (!textItem.breakWord) {\r\n            const textBlock =\r\n                typeof textItem.text === 'string'\r\n                    ? [textItem.text]\r\n                    : textItem.text;\r\n\r\n            const breakedTextBlock = textBlock.map(line => {\r\n                return line.split(' ');\r\n            });\r\n\r\n            const lines: {\r\n                text: string;\r\n                width: number;\r\n            }[] = [\r\n                {\r\n                    text: '',\r\n                    width: 0,\r\n                },\r\n            ];\r\n\r\n            breakedTextBlock.forEach(line => {\r\n                let spaceWidth = 0;\r\n                line.forEach(word => {\r\n                    let wordWidth = 0;\r\n\r\n                    word.split('').forEach(letter => {\r\n                        const charCode = letter.charCodeAt(0);\r\n\r\n                        const currentLetter =\r\n                            this.fontCharacters[charCode] ||\r\n                            this.fontCharacters['63'];\r\n                        let pathPositionCorrection = currentLetter.paths.reduce(\r\n                            (a, c) => a + c.mx - c.dx,\r\n                            0\r\n                        );\r\n                        wordWidth +=\r\n                            (currentLetter.w + pathPositionCorrection) * scale;\r\n                    });\r\n\r\n                    if (\r\n                        lines[lines.length - 1].width +\r\n                            wordWidth +\r\n                            5 * scale +\r\n                            spaceWidth +\r\n                            textItem.x * scale >\r\n                        textItem.width\r\n                    ) {\r\n                        lines.push({\r\n                            text: word + ' ',\r\n                            width: wordWidth,\r\n                        });\r\n                        spaceWidth = 0;\r\n                    } else {\r\n                        lines[lines.length - 1] = {\r\n                            text: lines[lines.length - 1].text + word,\r\n                            width: lines[lines.length - 1].width + wordWidth,\r\n                        };\r\n                        spaceWidth += this.WHITESPACE * scale;\r\n                        lines[lines.length - 1].text += ' ';\r\n                    }\r\n                });\r\n            });\r\n\r\n            let posX = textItem.x / scale,\r\n                posY = textItem.y / scale,\r\n                top = textItem.fontSize * 1.2;\r\n\r\n            lines.forEach(line => {\r\n                let left = 0;\r\n                let x = posX,\r\n                    y = posY;\r\n                console.log(\r\n                    textItem.width,\r\n                    line.width,\r\n                    textItem.width - line.width\r\n                );\r\n                if (textItem.textAlign === 'center') {\r\n                    x = (textItem.width - line.width) / 2 / scale;\r\n                }\r\n                line.text.split('').forEach(letter => {\r\n                    if (letter === ' ') {\r\n                        left += this.WHITESPACE;\r\n                    } else {\r\n                        const currentLetter =\r\n                            this.fontCharacters[letter.charCodeAt(0)] ||\r\n                            this.fontCharacters['63'];\r\n\r\n                        if (!textItem.render) {\r\n                            textItem.render = [];\r\n                        }\r\n                        currentLetter.paths.forEach(path => {\r\n                            textItem.render.push({\r\n                                path: path.d,\r\n                                x: x + left + path.mx - path.dx,\r\n                                y: y + top - path.my,\r\n                                pathLength: path.pl,\r\n                                dashOffset: 0\r\n                            });\r\n                        });\r\n\r\n                        left += currentLetter.w;\r\n                    }\r\n                });\r\n                top += 30;\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates and returns an SVG element\r\n     * @param n The name of the SVG node to be created\r\n     * @param v The attributes of the node\r\n     */\r\n\r\n    createSVGNode(n: string, v: { [x: string]: string }) {\r\n        const e = document.createElementNS('http://www.w3.org/2000/svg', n);\r\n        for (var p in v)\r\n            e.setAttributeNS(\r\n                null,\r\n                p.replace(/[A-Z]/g, function(m) {\r\n                    return '-' + m.toLowerCase();\r\n                }),\r\n                v[p]\r\n            );\r\n        return e;\r\n    }\r\n\r\n    /**\r\n     * Modifies the move to command of a given path and returns it.\r\n     * @param path The path \"d\" property\r\n     * @param x The x co-ordinate\r\n     * @param y The y co-ordinate\r\n     */\r\n    processPath(path: string, x = 0, y = 0) {\r\n        let svgPath = path.split('');\r\n        svgPath[2] = x + 1 + '';\r\n        svgPath[4] = y + '';\r\n        return svgPath.join('');\r\n    }\r\n\r\n    objectKeys<T>(x: T) {\r\n        let keys = Object.keys(x) as ObjectKeys<T>;\r\n        return keys;\r\n    }\r\n\r\n    boundRect(x: number, y: number, w: number, h = 10) {\r\n        this.ctx.save();\r\n        this.ctx.fillStyle = 'rgba(209, 56, 61,0.4)';\r\n        this.ctx.fillRect(x, y, w, h);\r\n        this.ctx.fill();\r\n        this.ctx.restore();\r\n    }\r\n}\r\n\r\nclass Group {\r\n    items: any[];\r\n    x: number;\r\n    y: number;\r\n\r\n    constructor() {\r\n        this.items = [];\r\n        this.x = 0;\r\n        this.y = 0;\r\n    }\r\n}\r\n\r\nif (window) {\r\n    (<any>window).Vara = Vara;\r\n}\r\n"],"names":["Vara","elem","fontSource","text","options","elementName","element","document","querySelector","textItems","renderData","rendered","fontCharacters","canvasWidth","defaultOptions","fontSize","strokeWidth","color","duration","textAlign","autoAnimation","queued","delay","breakWord","letterSpacing","global","width","getBoundingClientRect","defaultCharacters","paths","w","h","my","mx","dx","d","pl","canvas","createElement","height","ctx","getContext","appendChild","WHITESPACE","SCALEBASE","init","normalizeOptions","xmlhttp","XMLHttpRequest","open","onreadystatechange","readyState","status","contents","JSON","parse","responseText","c","fontProperties","p","preRender","render","send","svg","createSVGNode","style","position","zIndex","opacity","top","body","svgPathData","objectKeys","forEach","char","path","i","setAttributeNS","x","getTotalLength","item","currentlyDrawing","startTime","generateRenderData","rafTime","clearRect","draw","window","requestAnimationFrame","time","_textItem","textItem","strokeStyle","lineWidth","fillStyle","lineCap","lineJoin","scale","totalPathLength","reduce","a","pathLength","itemIndex","pathDuration","delta","speed","save","setLineDash","dashOffset","console","log","stroke","Path2D","processPath","y","restore","optionKey","undefined","option","Object","keys","character","textBlock","breakedTextBlock","map","line","split","lines","spaceWidth","word","wordWidth","letter","charCode","charCodeAt","currentLetter","pathPositionCorrection","length","push","posX","posY","left","n","v","e","createElementNS","replace","m","toLowerCase","svgPath","join","boundRect","fillRect","fill"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;MAkEMA;EA8BF,gBACIC,IADJ,EAEIC,UAFJ,EAGIC,IAHJ,EAIIC,OAJJ;EAMI,SAAKC,WAAL,GAAmBJ,IAAnB;EACA,SAAKK,OAAL,GAAeC,QAAQ,CAACC,aAAT,CAAuBP,IAAvB,CAAf;EACA,SAAKC,UAAL,GAAkBA,UAAlB;EACA,SAAKE,OAAL,GAAeA,OAAf;EACA,SAAKK,SAAL,GAAiBN,IAAjB;EACA,SAAKO,UAAL,GAAkBP,IAAlB;EACA,SAAKQ,QAAL,GAAgB,KAAhB;EACA,SAAKC,cAAL,GAAsB,EAAtB;EACA,SAAKC,WAAL,GAAmB,CAAnB;EAEA,SAAKC,cAAL,GAAsB;EAClBC,MAAAA,QAAQ,EAAE,EADQ;EAElBC,MAAAA,WAAW,EAAE,GAFK;EAGlBC,MAAAA,KAAK,EAAE,MAHW;EAIlBC,MAAAA,QAAQ,EAAE,IAJQ;EAKlBC,MAAAA,SAAS,EAAE,MALO;EAMlBC,MAAAA,aAAa,EAAE,IANG;EAOlBC,MAAAA,MAAM,EAAE,IAPU;EAQlBC,MAAAA,KAAK,EAAE,CARW;EASlBC,MAAAA,SAAS,EAAE,KATO;EAUlBC,MAAAA,aAAa,EAAE;EACXC,QAAAA,MAAM,EAAE;EADG,OAVG;EAalBC,MAAAA,KAAK,EAAE,KAAKpB,OAAL,CAAaqB,qBAAb,GAAqCD;EAb1B,KAAtB;EAgBA,SAAKE,iBAAL,GAAyB;EACrB,YAAM;EACFC,QAAAA,KAAK,EAAE,CACH;EACIC,UAAAA,CAAC,EAAE,cADP;EAEIC,UAAAA,CAAC,EAAE,kBAFP;EAGIC,UAAAA,EAAE,EAAE,kBAHR;EAIIC,UAAAA,EAAE,EAAE,CAJR;EAKIC,UAAAA,EAAE,EAAE,CALR;EAMIC,UAAAA,CAAC,EACG,0DAPR;EAQIC,UAAAA,EAAE,EAAE;EARR,SADG,EAWH;EACIN,UAAAA,CAAC,EAAE,cADP;EAEIC,UAAAA,CAAC,EAAE,iBAFP;EAGIC,UAAAA,EAAE,EAAE,iBAHR;EAIIE,UAAAA,EAAE,EAAE,CAJR;EAKID,UAAAA,EAAE,EAAE,CALR;EAMIE,UAAAA,CAAC,EACG,8HAPR;EAQIC,UAAAA,EAAE,EAAE;EARR,SAXG,CADL;EAuBFN,QAAAA,CAAC,EAAE;EAvBD;EADe,KAAzB;EA4BA,SAAKO,MAAL,GAAc9B,QAAQ,CAAC+B,aAAT,CAAuB,QAAvB,CAAd;EACA,SAAKD,MAAL,CAAYX,KAAZ,GAAoB,GAApB;EACA,SAAKW,MAAL,CAAYE,MAAZ,GAAqB,GAArB;EACA,SAAKC,GAAL,GAAW,KAAKH,MAAL,CAAYI,UAAZ,CAAuB,IAAvB,CAAX;EACA,SAAKnC,OAAL,CAAaoC,WAAb,CAAyB,KAAKL,MAA9B;EACA,SAAKM,UAAL,GAAkB,EAAlB;EACA,SAAKC,SAAL,GAAiB,EAAjB;EAEA,SAAKC,IAAL;EACH;;;;WAEDA,OAAA;;;EACI,SAAKC,gBAAL;EAEA,QAAMC,OAAO,GAAG,IAAIC,cAAJ,EAAhB;EACAD,IAAAA,OAAO,CAACE,IAAR,CAAa,KAAb,EAAoB,KAAK/C,UAAzB,EAAqC,IAArC;;EACA6C,IAAAA,OAAO,CAACG,kBAAR,GAA6B;EACzB,UAAIH,OAAO,CAACI,UAAR,IAAsB,CAA1B,EAA6B;EACzB,YAAIJ,OAAO,CAACK,MAAR,IAAkB,GAAtB,EAA2B;EACvB,cAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWR,OAAO,CAACS,YAAnB,CAAjB;EACA,UAAA,KAAI,CAAC5C,cAAL,GAAsByC,QAAQ,CAACI,CAA/B;EACA,UAAA,KAAI,CAACC,cAAL,GAAsBL,QAAQ,CAACM,CAA/B;;EACA,UAAA,KAAI,CAACC,SAAL;;EACA,UAAA,KAAI,CAACC,MAAL,GALuB;;EAO1B;EACJ;EACJ,KAXD;;EAYAd,IAAAA,OAAO,CAACe,IAAR,CAAa,IAAb;EACH;;WAEDF,YAAA;;;EACI,QAAIG,GAAG,GAAG,KAAKC,aAAL,CAAmB,KAAnB,EAA0B;EAChCtC,MAAAA,KAAK,EAAE,KADyB;EAEhCa,MAAAA,MAAM,EAAE;EAFwB,KAA1B,CAAV;EAIAwB,IAAAA,GAAG,CAACE,KAAJ,CAAUC,QAAV,GAAqB,UAArB;EACAH,IAAAA,GAAG,CAACE,KAAJ,CAAUE,MAAV,GAAmB,MAAnB;EACAJ,IAAAA,GAAG,CAACE,KAAJ,CAAUG,OAAV,GAAoB,GAApB;EACAL,IAAAA,GAAG,CAACE,KAAJ,CAAUI,GAAV,GAAgB,GAAhB;EAEA9D,IAAAA,QAAQ,CAAC+D,IAAT,CAAc5B,WAAd,CAA0BqB,GAA1B;EACA,QAAIQ,WAAW,GAAG,KAAKP,aAAL,CAAmB,MAAnB,EAA2B;EACzC7B,MAAAA,CAAC,EAAE;EADsC,KAA3B,CAAlB;EAGA4B,IAAAA,GAAG,CAACrB,WAAJ,CAAgB6B,WAAhB;EACA,SAAKC,UAAL,CAAgB,KAAK5D,cAArB,EAAqC6D,OAArC,CAA6C,UAAAC,KAAI;EAC7C,MAAA,MAAI,CAAC9D,cAAL,CAAoB8D,KAApB,EAA0B7C,KAA1B,CAAgC4C,OAAhC,CAAwC,UAACE,IAAD,EAAOC,CAAP;EACpCL,QAAAA,WAAW,CAACM,cAAZ,CAA2B,IAA3B,EAAiC,GAAjC,EAAsCF,IAAI,CAACxC,CAA3C;EACA,QAAA,MAAI,CAACvB,cAAL,CAAoB8D,KAApB,EAA0B7C,KAA1B,CACI+C,CADJ,EAEE1C,EAFF,GAEOqC,WAAW,CAAC5C,qBAAZ,GAAoCmD,CAF3C;EAGA,QAAA,MAAI,CAAClE,cAAL,CAAoB8D,KAApB,EAA0B7C,KAA1B,CACI+C,CADJ,EAEExC,EAFF,GAEOmC,WAAW,CAACQ,cAAZ,EAFP;EAGH,OARD;EASH,KAVD;EAYA,SAAKrE,UAAL,CAAgB+D,OAAhB,CAAwB,UAAAO,IAAI;EACxBA,MAAAA,IAAI,CAACC,gBAAL,GAAwB,CAAxB;EACAD,MAAAA,IAAI,CAACE,SAAL,GAAiB,KAAjB;EACH,KAHD;EAKA,SAAKC,kBAAL,CAAwB,KAAKzE,UAAL,CAAgB,CAAhB,CAAxB;EACH;;WAEDmD,SAAA,gBAAOuB,OAAP;;;UAAOA;EAAAA,MAAAA,UAAQ;;;EACX,SAAK5C,GAAL,CAAS6C,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,GAAzB,EAA8B,GAA9B;EACA,SAAKC,IAAL,CAAU,KAAK5E,UAAL,CAAgB,CAAhB,CAAV,EAA8B0E,OAA9B;EACAG,IAAAA,MAAM,CAACC,qBAAP,CAA6B,UAACC,IAAD;EAAA,aAAU,MAAI,CAAC5B,MAAL,CAAY4B,IAAZ,CAAV;EAAA,KAA7B;EACH;;WAEDH,OAAA,cAAKI,SAAL,EAA4BN,OAA5B;;;EACI,QAAMO,QAAQ,GAAyBD,SAAvC;EACA,SAAKlD,GAAL,CAASoD,WAAT,GAAuBD,QAAQ,CAAC1E,KAAhC;EACA,SAAKuB,GAAL,CAASqD,SAAT,GAAqBF,QAAQ,CAAC3E,WAA9B;EACA,SAAKwB,GAAL,CAASsD,SAAT,GAAqB,aAArB;EACA,SAAKtD,GAAL,CAASuD,OAAT,GAAmB,OAAnB;EACA,SAAKvD,GAAL,CAASwD,QAAT,GAAoB,OAApB;EAEA,QAAIC,KAAK,GAAGN,QAAQ,CAAC5E,QAAT,GAAoB,KAAK6B,SAArC;EAEA,QAAMsD,eAAe,GAAGP,QAAQ,CAAC9B,MAAT,CAAgBsC,MAAhB,CAAuB,UAACC,CAAD,EAAG3C,CAAH;EAAA,aAAS2C,CAAC,GAAC3C,CAAC,CAAC4C,UAAb;EAAA,KAAvB,EAAgD,CAAhD,CAAxB;;EAEA,QAAG,CAACV,QAAQ,CAACT,SAAb,EAAwB;EACpBS,MAAAA,QAAQ,CAACT,SAAT,GAAqBE,OAArB;EACH;;EAEDO,IAAAA,QAAQ,CAAC9B,MAAT,CAAgBY,OAAhB,CAAwB,UAACO,IAAD,EAAOsB,SAAP;EAEpB,UAAMC,YAAY,GAAKvB,IAAI,CAACqB,UAAL,GAAkBH,eAAnB,GAAsCP,QAAQ,CAACzE,QAAhD,GAA0D,IAA/E;EACA,UAAMsF,KAAK,GAAG,CAACpB,OAAO,GAAIO,QAAQ,CAACT,SAArB,IAA6C,IAA3D;EAEA,UAAMuB,KAAK,GAAGzB,IAAI,CAACqB,UAAL,GAAkBE,YAAhC;;EAEA,MAAA,MAAI,CAAC/D,GAAL,CAASkE,IAAT;;EACA,MAAA,MAAI,CAAClE,GAAL,CAASyD,KAAT,CAAeA,KAAf,EAAsBA,KAAtB;;EAEA,MAAA,MAAI,CAACzD,GAAL,CAASmE,WAAT,CAAqB,CAAC3B,IAAI,CAAC4B,UAAN,EAAkB5B,IAAI,CAACqB,UAAvB,CAArB;;EACA,UAAGV,QAAQ,CAACV,gBAAT,KAA8BqB,SAAjC,EAA4C;EACxCO,QAAAA,OAAO,CAACC,GAAR,CAAYnB,QAAQ,CAACV,gBAArB,EAAuCwB,KAAvC,EAA8CD,KAA9C;;EACA,YAAGxB,IAAI,CAAC4B,UAAL,IAAmB5B,IAAI,CAACqB,UAA3B,EAAuC;EACnCV,UAAAA,QAAQ,CAACV,gBAAT,IAA4B,CAA5B;EACH;;EACDD,QAAAA,IAAI,CAAC4B,UAAL,IAAkBH,KAAK,GAAGD,KAA1B;EACH;;EAED,MAAA,MAAI,CAAChE,GAAL,CAASuE,MAAT,CACI,IAAIC,MAAJ,CAAW,MAAI,CAACC,WAAL,CAAiBjC,IAAI,CAACL,IAAtB,EAA4BK,IAAI,CAACF,CAAjC,EAAoCE,IAAI,CAACkC,CAAzC,CAAX,CADJ;;EAGA,MAAA,MAAI,CAAC1E,GAAL,CAAS2E,OAAT;EACH,KAvBD;EAyBAxB,IAAAA,QAAQ,CAACT,SAAT,GAAqBE,OAArB;EAEH;EAED;;;;;;WAKAtC,mBAAA;;;EACI,SAAK1C,OAAL,GAAe,KAAKA,OAAL,IAAgB,EAA/B;EAEA,SAAKoE,UAAL,CAAgB,KAAK1D,cAArB,EAAqC2D,OAArC,CAA6C,UAAA2C,SAAS;EAClD,UAAI,MAAI,CAAChH,OAAL,CAAagH,SAAb,MAA4BC,SAAhC,EAA2C;EACvC;EACA,QAAA,MAAI,CAACjH,OAAL,CAAagH,SAAb,IAA0B,MAAI,CAACtG,cAAL,CAAoBsG,SAApB,CAA1B;EACH;EACJ,KALD;EAOA,SAAK1G,UAAL,CAAgB+D,OAAhB,CAAwB,UAACkB,QAAD,EAAWf,CAAX;EACpB,UAAI,OAAOe,QAAP,KAAoB,QAAxB,EAAkC;EAC9B,QAAA,MAAI,CAACjF,UAAL,CAAgBkE,CAAhB;EACIzE,UAAAA,IAAI,EAAEwF;EADV,WAEO,MAAI,CAAC7E,cAFZ;EAIH,OALD,MAKO,IAAI,OAAO6E,QAAP,KAAoB,QAAxB,EAAkC;EACrC,QAAA,MAAI,CAACnB,UAAL,CAAgB,MAAI,CAACpE,OAArB,EAA8BqE,OAA9B,CAAsC,UAAA6C,MAAM;EACxC,cAAI3B,QAAQ,CAAC2B,MAAD,CAAR,KAAqBD,SAAzB;EAEI1B,YAAAA,QAAQ,CAAC2B,MAAD,CAAR,GAAmB,MAAI,CAAClH,OAAL,CAAakH,MAAb,CAAnB;EACP,SAJD;EAKH;EACJ,KAbD;EAeAC,IAAAA,MAAM,CAACC,IAAP,CAAY,KAAK5F,iBAAjB,EAAoC6C,OAApC,CAA4C,UAAAgD,SAAS;EACjD,UAAI,MAAI,CAAC7G,cAAL,CAAoB6G,SAApB,MAAmCJ,SAAvC,EAAkD;EAC9C,QAAA,MAAI,CAACzG,cAAL,CAAoB6G,SAApB,IAAiC,MAAI,CAAC7F,iBAAL,CAC7B6F,SAD6B,CAAjC;EAGH;EACJ,KAND;EAOH;EAED;;;;;;WAIAtC,qBAAA,4BAAmBO,SAAnB;;;EACI,QAAMC,QAAQ,GAAyBD,SAAvC;EACA,QAAIO,KAAK,GAAGN,QAAQ,CAAC5E,QAAT,GAAoB,KAAK6B,SAArC;;EAEA,QAAI,CAAC+C,QAAQ,CAACpE,SAAd,EAAyB;EACrB,UAAMmG,SAAS,GACX,OAAO/B,QAAQ,CAACxF,IAAhB,KAAyB,QAAzB,GACM,CAACwF,QAAQ,CAACxF,IAAV,CADN,GAEMwF,QAAQ,CAACxF,IAHnB;EAKA,UAAMwH,gBAAgB,GAAGD,SAAS,CAACE,GAAV,CAAc,UAAAC,IAAI;EACvC,eAAOA,IAAI,CAACC,KAAL,CAAW,GAAX,CAAP;EACH,OAFwB,CAAzB;EAIA,UAAMC,KAAK,GAGL,CACF;EACI5H,QAAAA,IAAI,EAAE,EADV;EAEIuB,QAAAA,KAAK,EAAE;EAFX,OADE,CAHN;EAUAiG,MAAAA,gBAAgB,CAAClD,OAAjB,CAAyB,UAAAoD,IAAI;EACzB,YAAIG,UAAU,GAAG,CAAjB;EACAH,QAAAA,IAAI,CAACpD,OAAL,CAAa,UAAAwD,IAAI;EACb,cAAIC,SAAS,GAAG,CAAhB;EAEAD,UAAAA,IAAI,CAACH,KAAL,CAAW,EAAX,EAAerD,OAAf,CAAuB,UAAA0D,MAAM;EACzB,gBAAMC,QAAQ,GAAGD,MAAM,CAACE,UAAP,CAAkB,CAAlB,CAAjB;EAEA,gBAAMC,aAAa,GACf,MAAI,CAAC1H,cAAL,CAAoBwH,QAApB,KACA,MAAI,CAACxH,cAAL,CAAoB,IAApB,CAFJ;EAGA,gBAAI2H,sBAAsB,GAAGD,aAAa,CAACzG,KAAd,CAAoBsE,MAApB,CACzB,UAACC,CAAD,EAAI3C,CAAJ;EAAA,qBAAU2C,CAAC,GAAG3C,CAAC,CAACxB,EAAN,GAAWwB,CAAC,CAACvB,EAAvB;EAAA,aADyB,EAEzB,CAFyB,CAA7B;EAIAgG,YAAAA,SAAS,IACL,CAACI,aAAa,CAACxG,CAAd,GAAkByG,sBAAnB,IAA6CtC,KADjD;EAEH,WAZD;;EAcA,cACI8B,KAAK,CAACA,KAAK,CAACS,MAAN,GAAe,CAAhB,CAAL,CAAwB9G,KAAxB,GACIwG,SADJ,GAEI,IAAIjC,KAFR,GAGI+B,UAHJ,GAIIrC,QAAQ,CAACb,CAAT,GAAamB,KAJjB,GAKAN,QAAQ,CAACjE,KANb,EAOE;EACEqG,YAAAA,KAAK,CAACU,IAAN,CAAW;EACPtI,cAAAA,IAAI,EAAE8H,IAAI,GAAG,GADN;EAEPvG,cAAAA,KAAK,EAAEwG;EAFA,aAAX;EAIAF,YAAAA,UAAU,GAAG,CAAb;EACH,WAbD,MAaO;EACHD,YAAAA,KAAK,CAACA,KAAK,CAACS,MAAN,GAAe,CAAhB,CAAL,GAA0B;EACtBrI,cAAAA,IAAI,EAAE4H,KAAK,CAACA,KAAK,CAACS,MAAN,GAAe,CAAhB,CAAL,CAAwBrI,IAAxB,GAA+B8H,IADf;EAEtBvG,cAAAA,KAAK,EAAEqG,KAAK,CAACA,KAAK,CAACS,MAAN,GAAe,CAAhB,CAAL,CAAwB9G,KAAxB,GAAgCwG;EAFjB,aAA1B;EAIAF,YAAAA,UAAU,IAAI,MAAI,CAACrF,UAAL,GAAkBsD,KAAhC;EACA8B,YAAAA,KAAK,CAACA,KAAK,CAACS,MAAN,GAAe,CAAhB,CAAL,CAAwBrI,IAAxB,IAAgC,GAAhC;EACH;EACJ,SAtCD;EAuCH,OAzCD;EA2CA,UAAIuI,IAAI,GAAG/C,QAAQ,CAACb,CAAT,GAAamB,KAAxB;EAAA,UACI0C,IAAI,GAAGhD,QAAQ,CAACuB,CAAT,GAAajB,KADxB;EAAA,UAEI5B,GAAG,GAAGsB,QAAQ,CAAC5E,QAAT,GAAoB,GAF9B;EAIAgH,MAAAA,KAAK,CAACtD,OAAN,CAAc,UAAAoD,IAAI;EACd,YAAIe,IAAI,GAAG,CAAX;EACA,YAAI9D,CAAC,GAAG4D,IAAR;EAAA,YACIxB,CAAC,GAAGyB,IADR;EAEA9B,QAAAA,OAAO,CAACC,GAAR,CACInB,QAAQ,CAACjE,KADb,EAEImG,IAAI,CAACnG,KAFT,EAGIiE,QAAQ,CAACjE,KAAT,GAAiBmG,IAAI,CAACnG,KAH1B;;EAKA,YAAIiE,QAAQ,CAACxE,SAAT,KAAuB,QAA3B,EAAqC;EACjC2D,UAAAA,CAAC,GAAG,CAACa,QAAQ,CAACjE,KAAT,GAAiBmG,IAAI,CAACnG,KAAvB,IAAgC,CAAhC,GAAoCuE,KAAxC;EACH;;EACD4B,QAAAA,IAAI,CAAC1H,IAAL,CAAU2H,KAAV,CAAgB,EAAhB,EAAoBrD,OAApB,CAA4B,UAAA0D,MAAM;EAC9B,cAAIA,MAAM,KAAK,GAAf,EAAoB;EAChBS,YAAAA,IAAI,IAAI,MAAI,CAACjG,UAAb;EACH,WAFD,MAEO;EACH,gBAAM2F,aAAa,GACf,MAAI,CAAC1H,cAAL,CAAoBuH,MAAM,CAACE,UAAP,CAAkB,CAAlB,CAApB,KACA,MAAI,CAACzH,cAAL,CAAoB,IAApB,CAFJ;;EAIA,gBAAI,CAAC+E,QAAQ,CAAC9B,MAAd,EAAsB;EAClB8B,cAAAA,QAAQ,CAAC9B,MAAT,GAAkB,EAAlB;EACH;;EACDyE,YAAAA,aAAa,CAACzG,KAAd,CAAoB4C,OAApB,CAA4B,UAAAE,IAAI;EAC5BgB,cAAAA,QAAQ,CAAC9B,MAAT,CAAgB4E,IAAhB,CAAqB;EACjB9D,gBAAAA,IAAI,EAAEA,IAAI,CAACxC,CADM;EAEjB2C,gBAAAA,CAAC,EAAEA,CAAC,GAAG8D,IAAJ,GAAWjE,IAAI,CAAC1C,EAAhB,GAAqB0C,IAAI,CAACzC,EAFZ;EAGjBgF,gBAAAA,CAAC,EAAEA,CAAC,GAAG7C,GAAJ,GAAUM,IAAI,CAAC3C,EAHD;EAIjBqE,gBAAAA,UAAU,EAAE1B,IAAI,CAACvC,EAJA;EAKjBwE,gBAAAA,UAAU,EAAE;EALK,eAArB;EAOH,aARD;EAUAgC,YAAAA,IAAI,IAAIN,aAAa,CAACxG,CAAtB;EACH;EACJ,SAvBD;EAwBAuC,QAAAA,GAAG,IAAI,EAAP;EACH,OArCD;EAsCH;EACJ;EAED;;;;;;;WAMAL,gBAAA,uBAAc6E,CAAd,EAAyBC,CAAzB;EACI,QAAMC,CAAC,GAAGxI,QAAQ,CAACyI,eAAT,CAAyB,4BAAzB,EAAuDH,CAAvD,CAAV;;EACA,SAAK,IAAIlF,CAAT,IAAcmF,CAAd;EACIC,MAAAA,CAAC,CAAClE,cAAF,CACI,IADJ,EAEIlB,CAAC,CAACsF,OAAF,CAAU,QAAV,EAAoB,UAASC,CAAT;EAChB,eAAO,MAAMA,CAAC,CAACC,WAAF,EAAb;EACH,OAFD,CAFJ,EAKIL,CAAC,CAACnF,CAAD,CALL;EADJ;;EAQA,WAAOoF,CAAP;EACH;EAED;;;;;;;;WAMA9B,cAAA,qBAAYtC,IAAZ,EAA0BG,CAA1B,EAAiCoC,CAAjC;UAA0BpC;EAAAA,MAAAA,IAAI;;;UAAGoC;EAAAA,MAAAA,IAAI;;;EACjC,QAAIkC,OAAO,GAAGzE,IAAI,CAACmD,KAAL,CAAW,EAAX,CAAd;EACAsB,IAAAA,OAAO,CAAC,CAAD,CAAP,GAAatE,CAAC,GAAG,CAAJ,GAAQ,EAArB;EACAsE,IAAAA,OAAO,CAAC,CAAD,CAAP,GAAalC,CAAC,GAAG,EAAjB;EACA,WAAOkC,OAAO,CAACC,IAAR,CAAa,EAAb,CAAP;EACH;;WAED7E,aAAA,oBAAcM,CAAd;EACI,QAAI0C,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAY1C,CAAZ,CAAX;EACA,WAAO0C,IAAP;EACH;;WAED8B,YAAA,mBAAUxE,CAAV,EAAqBoC,CAArB,EAAgCpF,CAAhC,EAA2CC,CAA3C;UAA2CA;EAAAA,MAAAA,IAAI;;;EAC3C,SAAKS,GAAL,CAASkE,IAAT;EACA,SAAKlE,GAAL,CAASsD,SAAT,GAAqB,uBAArB;EACA,SAAKtD,GAAL,CAAS+G,QAAT,CAAkBzE,CAAlB,EAAqBoC,CAArB,EAAwBpF,CAAxB,EAA2BC,CAA3B;EACA,SAAKS,GAAL,CAASgH,IAAT;EACA,SAAKhH,GAAL,CAAS2E,OAAT;EACH;;;;;EAeL,IAAI5B,MAAJ,EAAY;EACFA,EAAAA,MAAO,CAACvF,IAAR,GAAeA,IAAf;EACT;;;;"}